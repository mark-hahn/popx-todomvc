
# todomvc web page popx module

module:
  $name:        todomvc
  description:  A popx todomvc example webpage

modules:
  
  # interface to parent, popx server
  server:
    $module:     [$IO]
    taskList:    taskList

  # register new task text event
  newTask:    
    $module:    [$dom]
    $ele:       [.new-todo]
    $event:     [change]
    $emit:      newTaskText->

  # create new task instance
  newTaskObj:
    $module:    [$object]
    text:     <-newTaskText
    done:       [false]
    $emit:      newTaskObj->
    
  doneChkbox:    
    $module:    [$dom]
    $ele:       [.todo .done-ckbox]
    $event:     [change]
    $value:     [closest(.todo)]
    $emit:      doneChg->

  # register delete events on individual tasks
  delBtn:    
    $module:   [$dom]
    $ele:      [.todo .delete-btn]
    $event:    [click]
    $listener: [.todo-list]
    $value:    [model(closest(.todo))]
    $emit:     delTaskObj->

  # add task obj to list (model)  
  taskListArray:
    $module:    [$array]
    $array:     taskList
    $unshift: <-newTaskObj
    $remove:  <-delTaskObj
    $length:    taskListLen

  # set class to done if trigger checkbox is checked
  setDoneClass:
    $module:    [$dom]
    $ele:     <-doneChg
    $if:        [ele(.done-ckbox:checked)]
    $class:     [done]

  # attach model to DOM
  pageDom:
    $module:    [$dom]
    $links:
      .todo-list:                  taskListLen
      .todo:                       taskList
      ".todo label::after":        $item.text
      ".todo .done-ckbox:checked": $item.done

