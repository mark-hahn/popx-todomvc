
# taskmvc web app popx declaration

project:
  name:         taskmvc
  description:  A popx taskmvc example for taskmvc.com
  author:       Mark Hahn <mark@hahnca.com>
  repository:   mark-hahn/popx-taskmvc

modules:
  # watch new task text input
  newTextInp: 
    $module:    $dom
    $sel:       ["#new-task-inp"]
    changeEvt:  newTaskLbl
    $value:     newTaskLbl
    
  # create new task instance
  newTaskInst:
    $module:    $new
    $class:     [Object]
    label:      newTaskLbl
    done:       [false]
    $instance:  taskItem
    
  # turn task instance into DOM element
  # uses moustache template from file
  newItemEle:
    $module:    $dom
    $op:        [createElement]
    $model:     taskItem
    $template:  [file, item.html]
    $ele:       taskEle
  
  # add task ele to ele list (model)  
  addItemToList:
    $module:    $arrayOps
    $op:        [unshift]
    $item:      taskEle
    $array:     taskEles
    
  # watch all task done checkbox inputs
  doneChkboxes:
    $module:    $dom
    $sel:       [.done-chkbox]
    $value:     itemChecked
    changeEvt:  itemChecked
    
  # set class to checked if wire itemChecked is true
  showItemDone:
    $module:    $dom
    $sel:       [.task-item]
    $class:     [checked, itemChecked]
      
  # watch all delete buttons
  deleteBtns:
    $module:    $dom
    $sel:       [.del-btn]
    $evtTarget: deleteEle
    clickEvt:   [deleteEle, delete] # del from DOM
  
  # remove ele from task list on deleteEle event
  removeItem:
    $module:    $arrayOps
    $op:        [delete] # del from list
    $trigger:   deleteEle
    $item:      taskEle
    $array:     taskEles
    
  # create/add dom children and react to changes in list
  showList:
    $module:    $dom
    $sel:       ["#task-list"]
    $op:        [updateChildren]
    $value:     taskEles
  
  # print changes to console for any wires listed
  log:
    $module:    $log
    newTaskLbl:
    taskItem:
    taskEle:
    itemChecked:
    deleteEle:
    taskEles:
      
  